{
    "swagger": "2.0",
    "host": "localhost:8000",
    "basePath": "/",
    "schemes": [
        "http"
    ],
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "externalDocs": {
        "description": "Tutorial this API was created based on.",
        "url": "https://eerwitt.github.io/2016/01/14/tensorflow-from-csv-to-api/"
    },
    "info": {
        "version": "0.0.1a",
        "title": "Iris",
        "description": "Predict the species (class) of an Iris based on data provided by\n[Iris Flower Wiki](https://en.wikipedia.org/wiki/Iris_flower_data_set) and\n[UCI](https://archive.ics.uci.edu/ml/datasets/Iris).\n",
        "termsOfService": "None",
        "contact": {
            "name": "Erik",
            "url": "https://eerwitt.github.io"
        },
        "license": {
            "name": "Beerware",
            "url": "https://en.wikipedia.org/wiki/Beerware"
        }
    },
    "definitions": {
        "UnknownIris": {
            "$ref": "#/definitions/Iris"
        },
        "Iris": {
            "type": "object",
            "description": "A type of flower.",
            "properties": {
                "species": {
                    "description": "Species of Iris based on the Iris dataset.",
                    "type": "string",
                    "enum": [
                        "Iris Setosa",
                        "Iris Versicolor",
                        "Iris Virginica"
                    ]
                },
                "sepal_length": {
                    "description": "Sepal Length of an Iris",
                    "type": "number",
                    "format": "float"
                },
                "sepal_width": {
                    "description": "Sepal Width of an Iris",
                    "type": "number",
                    "format": "float"
                },
                "petal_length": {
                    "description": "Petal Length of an Iris",
                    "type": "number",
                    "format": "float"
                },
                "petal_width": {
                    "description": "Petal Width of an Iris",
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "Prediction": {
            "type": "object",
            "description": "Results found from attempting to match a requested set of Iris features\nwith our trained model.\n",
            "properties": {
                "iris": {
                    "description": "Class which most closely matched the requested features.",
                    "$ref": "#/definitions/Iris"
                },
                "y": {
                    "type": "array",
                    "description": "Y's rank 1 tensor of results in order Setsosa, Versicolor and\nVirginica.\n",
                    "items": {
                        "type": "number",
                        "format": "float"
                    }
                }
            }
        },
        "PredictionRequest": {
            "type": "object",
            "description": "Request to predict the class of an Iris based on its attributes.\n",
            "properties": {
                "uuid": {
                    "description": "UUID4 identifier for this PredictionRequest.",
                    "type": "string",
                    "format": "uuid"
                },
                "prediction": {
                    "$ref": "#/definitions/Prediction"
                },
                "status": {
                    "description": "Changes based on when this request is picked from a FIFO.",
                    "type": "string",
                    "enum": [
                        "fulfilled",
                        "pending",
                        "error"
                    ]
                },
                "iris_features": {
                    "description": "An Iris with no class but petal and sepal information filled out.\n",
                    "$ref": "#/definitions/Iris"
                }
            }
        }
    },
    "paths": {
        "/predictionrequest/{uuid}": {
            "get": {
                "description": "`PredictionRequest`s are not returned immediately. They are processed\nin a queue which require continual checking until they're ready.\n\nAs a `PredictionRequest` is fulfilled, it will change the status and\ninclude a `Prediction` which is the result generated by testing the\nfeatures against the trained model `y`.\n",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "type": "string",
                        "description": "UUID of prediction request.",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/PredictionRequest"
                        }
                    }
                }
            }
        },
        "/predictionrequest/": {
            "post": {
                "parameters": [
                    {
                        "name": "UnknownIris",
                        "in": "body",
                        "description": "Request a prediction of what type of Iris this class relates to.\n",
                        "schema": {
                            "$ref": "#/definitions/UnknownIris"
                        },
                        "required": true
                    }
                ],
                "description": "Request Iris to make a prediction based on a set of features.\n",
                "responses": {
                    "201": {
                        "description": "Successfully requested a prediction of the given features.",
                        "schema": {
                            "$ref": "#/definitions/PredictionRequest"
                        }
                    }
                }
            }
        }
    }
}
